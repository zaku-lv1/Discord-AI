# =================================================================================
# Discord AI Bot - Environment Configuration
# =================================================================================
# Copy this file to .env and fill in your actual values

# =================================================================================
# Application Environment
# =================================================================================
# Set to 'production' for production deployment
NODE_ENV=development

# =================================================================================
# Gmail SMTP設定（メール認証用）
# =================================================================================
# Gmail SMTPサーバーを使用してメール認証を行います
# Gmailアカウントでアプリパスワードを生成する必要があります

# Gmailアドレス（システムからのメール送信に使用）
GMAIL_USER=your-gmail-address@gmail.com

# Gmailアプリパスワード（Google アカウントで2段階認証を有効にして生成）
# 注意：通常のパスワードではなく、アプリ専用パスワードを使用してください
GMAIL_APP_PASSWORD=your-gmail-app-password

# =================================================================================
# Discord Bot Configuration (Optional)
# =================================================================================
# Your Discord bot token from https://discord.com/developers/applications
# Note: Discord login functionality has been removed, this is only for the bot
DISCORD_TOKEN=your_discord_bot_token_here

# The domain where your admin panel will be hosted
# For development: localhost
# For production: your-domain.com (without protocol)
# For GitHub Codespaces: your-codespace-name.app.github.dev
# Note: This must match the actual domain where the app is accessed
ADMIN_DOMAIN=localhost

# =================================================================================
# Google Gemini AI Configuration
# =================================================================================
# Get your API key from https://ai.google.dev/
GEMINI_API_KEY=your_gemini_api_key_here

# =================================================================================
# Firebase Configuration
# =================================================================================
# Firebase project configuration for data storage
# 詳細な設定手順は FIREBASE_SETUP.md を参照してください

FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_API_KEY=your_firebase_api_key
FIREBASE_AUTH_DOMAIN=your-firebase-project.firebaseapp.com
FIREBASE_STORAGE_BUCKET=your-firebase-project.appspot.com
FIREBASE_MESSAGING_SENDER_ID=123456789
FIREBASE_APP_ID=1:123456789:web:abcdefghijklmnop

# Firebase Admin SDK Service Account JSON
# Firebase Console → Project Settings → Service Accounts → Generate New Private Key
# ダウンロードしたJSONファイルの全内容を1行の文字列として設定してください
# 詳細な手順は FIREBASE_SETUP.md を参照してください
FIREBASE_SERVICE_ACCOUNT_JSON='{"type":"service_account","project_id":"your-project","private_key_id":"...","private_key":"-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n","client_email":"...","client_id":"...","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token"}'

# =================================================================================
# Server Configuration
# =================================================================================
# Port number for the web server
# Development default: 8080, Production: 80 (HTTP) or 443 (HTTPS)
PORT=8080

# Session secret for authentication (generate a random string)
# Use a strong, unique secret for production!
SESSION_SECRET=your_random_session_secret_here

# Emergency admin access key (optional, for recovery purposes)
# Set this to a strong, unique secret to enable emergency admin access
# If set, this key can be used to grant admin privileges when locked out
# Leave empty to disable this feature
EMERGENCY_ADMIN_KEY=

# =================================================================================
# Gmail認証システム
# =================================================================================
# システムはGmail SMTPサーバーを使用したメール認証を使用します
# ユーザーはユーザー名/メールアドレス/パスワードでアカウントを作成
# アカウント有効化前にメール認証が必要
# パスワード再設定機能もメール経由で利用可能
# 全てのユーザーデータはFirebaseの'users'コレクションに保存されます